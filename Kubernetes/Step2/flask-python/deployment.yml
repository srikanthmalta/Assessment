apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-python-deployment
  labels:
    app: flask
spec:
  replicas: 2  # Ensure at least two replicas for high availability
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
        - name: flask
          image: acrcommonwesteu.azurecr.io/flask-mongo-app:v3
          ports:
            - containerPort: 5000
          resources:
            requests:  # Add resource requests
              memory: 100Mi
              cpu: 50m
            limits:
              memory: 200Mi
              cpu: 100m
          env:
          - name: MONGO_URI
            value: "mongodb://mongo-service:27017/ping_database"
          livenessProbe:  # Add liveness probe to check if the app is healthy
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:  # Add readiness probe to ensure app is ready before receiving traffic
            httpGet:
              path: /ready
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:  # Avoid running as root
            runAsUser: 1000
            runAsGroup: 3000
            fsGroup: 2000
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: flask-autoscale
  namespace: reddy
spec:
  maxReplicas: 5
  minReplicas: 2  # Keep at least two replicas for HA
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flask-python-deployment
  targetCPUUtilizationPercentage: 50
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 2
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:5.0
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db
        resources:
          requests:
            memory: 50Mi
            cpu: 50m
          limits:
            memory: 100Mi
            cpu: 100m
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: mongo-storage
        persistentVolumeClaim:
          claimName: mongo-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  labels:
    app: flask
spec:
  type: LoadBalancer
  selector:
    app: flask
  ports:
    - port: 5000
      targetPort: 5000
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: flask-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: flask
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mongo-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: mongo
