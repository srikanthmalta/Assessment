---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 2
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:5.0
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db
        resources:
          requests:
            memory: 50Mi
            cpu: 50m
          limits:
            memory: 100Mi
            cpu: 100m
      volumes:
      - name: mongo-storage
        persistentVolumeClaim:
          claimName: mongo-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-python-deployment
  labels:
    app: flask
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
        - name: flask
          image: acrcommonwesteu.azurecr.io/flask-mongo-app:v3
          ports:
            - containerPort: 5000
          resources:
            requests:
              memory: 100Mi
              cpu: 50m
            limits:
              memory: 200Mi
              cpu: 100m
          env:
          - name: MONGO_URI
            value: "mongodb://mongo-service:27017/ping_database"
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 15
            periodSeconds: 20
          securityContext:
            runAsUser: 1000
            runAsGroup: 3000
            fsGroup: 2000

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: flask-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: flask
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mongo-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: mongo
