apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: prometheus
  labels:
    app: prometheus
    environment: production
spec:
  selector:
    app: prometheus-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9090
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  namespace: prometheus
  labels:
    app: prometheus
    environment: production
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'flask-python-app'
        static_configs:
          - targets: ['flask-service.reddy.svc.cluster.local:5000']
        metrics_path: /metrics
        scrape_interval: 15s
      - job_name: 'AKS'
        static_configs:
          - targets: ['v1-kube-state-metrics.reddy.svc.cluster.local:8080']
        metrics_path: /metrics
        scrape_interval: 15s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: prometheus
  labels:
    app: prometheus
    environment: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prometheus-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1
  template:
    metadata:
      labels:
        app: prometheus-server
        environment: production
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: prometheus
          image: prom/prometheus:v2.35.0
          ports:
            - containerPort: 9090
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-server-conf
            defaultMode: 420
      volumeClaimTemplates:
        - metadata:
            name: prometheus-storage
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: prometheus
  labels:
    app: prometheus
    environment: production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
